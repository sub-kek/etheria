From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: sub-kek <subbkek@gmail.com>
Date: Fri, 10 Jan 2025 20:10:19 +0300
Subject: [PATCH] Etheria command


diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index adaf480bfd5a168abfc3c9ba0fe401875f9a3f61..874b227b447acfc07c1fe93c8904fd3053460f70 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -239,6 +239,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         gg.pufferfish.pufferfish.PufferfishConfig.load(); // Pufferfish
         gg.pufferfish.pufferfish.PufferfishCommand.init(); // Pufferfish
         org.subkek.etheria.EtheriaConfig.INSTANCE.init(); // Etheria - utils
+        org.subkek.etheria.EtheriaCommand.register(); // Etheria - command
 
         this.setPvpAllowed(dedicatedserverproperties.pvp);
         this.setFlightAllowed(dedicatedserverproperties.allowFlight);
diff --git a/src/main/java/org/subkek/etheria/EtheriaCommand.java b/src/main/java/org/subkek/etheria/EtheriaCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..5724701077f4fe095b8bebe535879506412ce379
--- /dev/null
+++ b/src/main/java/org/subkek/etheria/EtheriaCommand.java
@@ -0,0 +1,74 @@
+package org.subkek.etheria;
+
+import net.kyori.adventure.text.minimessage.MiniMessage;
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.Collections;
+import java.util.List;
+import java.util.stream.Collectors;
+import java.util.stream.Stream;
+
+public class EtheriaCommand extends Command {
+    private static final MiniMessage MINI_MESSAGE = MiniMessage.miniMessage();
+
+    public EtheriaCommand() {
+        super("etheria");
+        this.setDescription("Etheria related commands");
+        this.setUsage("/etheria [reload | info]");
+        this.setPermission("bukkit.command.etheria");
+    }
+
+    public static void register() {
+        MinecraftServer.getServer().server.getCommandMap().register("etheria", "etheria", new EtheriaCommand());
+    }
+
+    @Override
+    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args, @Nullable Location location) throws IllegalArgumentException {
+        if (args.length == 1) {
+            return Stream.of("reload", "info")
+                .filter(arg -> arg.startsWith(args[0].toLowerCase()))
+                .collect(Collectors.toList());
+        }
+        return Collections.emptyList();
+    }
+
+    @Override
+    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
+        if (!testPermission(sender)) return true;
+        String prefix = "<#ff9f63><bold> Etheria Â» <#ffd6ab>";
+
+        if (args.length != 1) {
+            sender.sendMessage(MINI_MESSAGE.deserialize(prefix + "Usage: " + usageMessage));
+            return true;
+        }
+
+        if (args[0].equalsIgnoreCase("reload")) {
+            sender.sendMessage(MINI_MESSAGE.deserialize(prefix + "Reloading Config..."));
+            try {
+                EtheriaConfig.INSTANCE.init();
+            } catch (Throwable e) {
+                sender.sendMessage(MINI_MESSAGE.deserialize(prefix + "<red>Config failed to reload. See console for output."));
+                EtheriaLogger.error("Failed to reload config by command: ", e);
+                return true;
+            }
+            MinecraftServer.getServer().server.reloadCount++;
+            sender.sendMessage(MINI_MESSAGE.deserialize(prefix + "Config successfully reloaded."));
+
+        } else if (args[0].equalsIgnoreCase("info")) {
+            sender.sendMessage(MINI_MESSAGE.deserialize(prefix + "Etheria:"));
+            sender.sendMessage(MINI_MESSAGE.deserialize(prefix + "Minecraft: " + Bukkit.getMinecraftVersion()));
+            sender.sendMessage(MINI_MESSAGE.deserialize(prefix + "Core: " + Bukkit.getVersion()));
+            sender.sendMessage(MINI_MESSAGE.deserialize(prefix + "API: " + Bukkit.getBukkitVersion()));
+        } else {
+            sender.sendMessage(MINI_MESSAGE.deserialize(prefix + "Hmm, not found argument."));
+        }
+
+        return true;
+    }
+}
